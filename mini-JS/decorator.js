export function MeasureExecutionTime(n,t,e){const o=e.value;return e.value=function(...n){const e=performance.now(),r=o.apply(this,n),u=performance.now();return console.log(`[${t}] executed in ${u-e} ms`),r},e}export function LogMethodCall(n,t,e){const o=e.value;return e.value=function(...n){console.log(`Calling method ${t} with arguments:`,n);const e=o.apply(this,n);return console.log(`Method ${t} returned:`,e),e},e}export function LogClassCreation(n){const t=n;function e(...n){return console.log(`Creating instance of ${t.name} with arguments:`,n),new t(...n)}return e.prototype=t.prototype,e}export function CatchErrors(n,t,e){const o=e.value;return e.value=function(...n){try{return o.apply(this,n)}catch(n){return console.error(`[${t}] threw an error:`,n),null}},e}export function Readonly(n,t){Object.defineProperty(n,t,{writable:!1,configurable:!1})}export function Throttle(n){let t=0;return function(e,o,r){const u=r.value;return r.value=function(...e){const o=Date.now();if(o-t>=n)return t=o,u.apply(this,e)},r}}